{"version":3,"sources":["components/ProgressBar.js","components/Modal.js","App.js","index.js"],"names":["ProgressBar","data","handleChange","editButton","deleteButton","moveButton","position","useState","deleted","setDeleted","level","setLevel","time","dates","start","Date","current","end","daysLeft","Math","floor","hoursLeft","timeElapsed","passDuration","passGoal","goal","early","clamp","num","min","max","levelPcnt","daysPcnt","changeButton","e","id","operation","currentTarget","getAttribute","newLevel","parseInt","increment","prepareMove","direction","ProgressContent","className","Number","isNaN","timeLeft","style","left","icon","faClock","data-operation","onClick","title","faMinus","faPlus","daysEarly","hoursEarly","earlyMessage","MoveButtons","moveUp","data-direction","faAngleUp","moveDown","faAngleDown","flipId","name","type","value","onChange","target","width","toString","length","faTrash","faEdit","toLocaleString","day","month","Modal","mode","form","open","onClose","onSave","children","ReactDom","createPortal","htmlFor","document","getElementById","App","dataIndex","setIndex","setData","firstLoad","useRef","storage","JSON","parse","localStorage","getItem","index","setForm","isEditing","setIsEditing","modal","setModal","lastChange","setLastChange","startEdit","key","findIndex","i","editing","handleLevel","modifiedData","deleteEntry","splice","moveEntry","arrayMove","require","newIndex","movedData","listProgresses","map","item","useEffect","setItem","stringify","flipKey","spring","prevState","concat","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bff0bfd1.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Flipped } from 'react-flip-toolkit'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleUp, faAngleDown, faTrash, faEdit, faPlus, faMinus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst ProgressBar = ({data, handleChange, editButton, deleteButton, moveButton, position}) => {\r\n  const [deleted, setDeleted] = useState(false)\r\n  const [level, setLevel] = useState(data.level)\r\n\r\n  const time = data.time || \"00:00\"\r\n\r\n  const dates = {\r\n    start: new Date(`${data.start}T${time}`),\r\n    current: new Date(),\r\n    end: new Date(`${data.end}T${time}`)\r\n  }\r\n  \r\n  let daysLeft = Math.floor((dates.end - dates.current) / (1000 * 3600 * 24))\r\n  let hoursLeft = Math.floor((dates.end - dates.current) / (1000*60*60))\r\n  let timeElapsed = Math.floor((dates.current - dates.start))\r\n  let passDuration = Math.floor((dates.end - dates.start))\r\n  let passGoal = data.goal\r\n  \r\n  let early = 0\r\n\r\n  if (dates.current < dates.start) {\r\n    early = (dates.start - dates.current)\r\n  }\r\n\r\n  const clamp = (num, min, max) => {\r\n    return num <= min ? min : num >= max ? max : num;\r\n  }\r\n\r\n  let levelPcnt = clamp(level/passGoal*100,0,100)\r\n  let daysPcnt = clamp(timeElapsed/passDuration*100,0,100)\r\n\r\n  const changeLevel = e => {\r\n    const id = data.id\r\n    const newLevel = e.target.value\r\n    setLevel(newLevel)\r\n\r\n    handleChange(id, newLevel)\r\n  }\r\n\r\n  const prepareEdit = () => {\r\n    const id = data.id\r\n\r\n    editButton(id)\r\n  }\r\n\r\n  const prepareDelete = () => {\r\n    const id = data.id\r\n\r\n    deleteButton(id)\r\n    setDeleted(true)\r\n  }\r\n\r\n  const changeButton = e => {\r\n    const id = data.id\r\n    const operation = e.currentTarget.getAttribute('data-operation')\r\n    let newLevel = parseInt(level)\r\n    const increment = parseInt(data.increment) || 1\r\n\r\n    operation === \"plus\" ? newLevel=newLevel+increment : newLevel=newLevel-increment\r\n\r\n    setLevel(newLevel)\r\n    handleChange(id, newLevel)\r\n  }\r\n\r\n  const prepareMove = e => {\r\n    const id = data.id\r\n    const direction = e.currentTarget.getAttribute('data-direction')\r\n\r\n    moveButton(id, direction)\r\n  }\r\n\r\n  const ProgressContent = () => {\r\n\r\n    if (dates.start > dates.end) {\r\n      return <div className=\"progress-notice\"><p>ERROR: The start date is higher than end date.</p></div>\r\n    }\r\n\r\n    if (Number.isNaN(dates.start/1000) || Number.isNaN(dates.end/1000)){\r\n      return <div className=\"progress-notice\"><p>ERROR: The entered date is invalid.</p></div>\r\n    }\r\n\r\n    if (passGoal <= 0) {\r\n      return <div className=\"progress-notice\"><p>ERROR: The defined goal is invalid.</p></div>\r\n    }\r\n\r\n    if (early === 0 && daysLeft >= 0) {\r\n      const timeLeft = hoursLeft >= 24 ? <span className=\"time-digits\">{daysLeft} day(s)</span> : <span className=\"time-digits\">{hoursLeft} hour(s)</span>\r\n\r\n      return(\r\n        <>\r\n          <div className=\"progress-days\" style={{left: daysPcnt+\"%\"}}>\r\n            <span className=\"time-icon\"><FontAwesomeIcon icon={faClock}/></span>\r\n            {timeLeft}\r\n            <div className=\"measure\"></div>\r\n          </div>\r\n          <div className=\"progress-buttons\">\r\n            <button data-operation=\"minus\" onClick={changeButton} title=\"Decrement\"><FontAwesomeIcon icon={faMinus}/></button>\r\n            <button data-operation=\"plus\" onClick={changeButton} title=\"Increment\"><FontAwesomeIcon icon={faPlus}/></button>\r\n          </div>\r\n        </>\r\n      )\r\n    } else if (early >= 1) {\r\n      const daysEarly = Math.floor(early / (1000 * 3600 * 24))\r\n      const hoursEarly = Math.floor(early / (1000 * 60 * 60))\r\n      const earlyMessage = hoursEarly <= 24 ? <p>This event start in {hoursEarly} hours(s)</p> : <p>This event start in {daysEarly} day(s)</p>\r\n\r\n      return <div className=\"progress-notice\">{earlyMessage}</div>\r\n    } else if (daysLeft < 0) {\r\n      const timeElapsed = hoursLeft >= -24 ? <p>This event ended {-hoursLeft-1} hours(s) ago</p> : <p>This event ended {-daysLeft-1} days(s) ago</p>\r\n      return <div className=\"progress-notice\">{timeElapsed}</div>\r\n    } else {\r\n      return <div className=\"progress-notice\"><p>An unknown error has occured</p></div>\r\n    }\r\n  }\r\n\r\n  const MoveButtons = () => {\r\n    const moveUp = <button data-direction=\"up\" onClick={prepareMove} title=\"Move tracker up\"><FontAwesomeIcon icon={faAngleUp}/></button>\r\n    const moveDown = <button data-direction=\"down\" onClick={prepareMove} title=\"Move tracker down\"><FontAwesomeIcon icon={faAngleDown}/></button>\r\n    if (position === \"alone\") {\r\n      return null\r\n    } else if (position === \"first\") {\r\n      return moveDown\r\n    } else if (position === \"last\") {\r\n      return moveUp\r\n    } else {\r\n      return(\r\n        <>\r\n          {moveUp}\r\n          {moveDown}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  if (deleted === true) return null\r\n\r\n  return (\r\n    <Flipped flipId={data.id}>\r\n      <div className=\"tracker\">\r\n        <div className=\"level-form\">\r\n          <h2>{data.name}: </h2>\r\n          <input  type=\"number\"\r\n                  name=\"level\"\r\n                  value={level}\r\n                  onChange={changeLevel} \r\n                  style={{width: 0.60 * passGoal.toString().length + \"em\"}}\r\n                  />\r\n          <h2>/{data.goal}</h2>\r\n          <div className=\"buttons-container right\">\r\n            <button onClick={prepareDelete} title=\"Delete tracker\"><FontAwesomeIcon icon={faTrash}/></button>\r\n            <button onClick={prepareEdit} title=\"Edit tracker\"><FontAwesomeIcon icon={faEdit}/></button>\r\n          </div>\r\n          <div className=\"buttons-container left\">\r\n            <MoveButtons/>\r\n          </div>\r\n        </div>\r\n        <div className=\"progress-container\">\r\n          <span className=\"dates left\">{dates.start.toLocaleString('default', {day:\"numeric\", month: 'long'})}</span>\r\n          <div className=\"progress bg\">\r\n            <ProgressContent/>\r\n            <div className={`progress bar${levelPcnt < daysPcnt ? \" late\" : levelPcnt === 100 ? \" finished\" : \"\"}`} style={{width: levelPcnt+\"%\"}}></div>\r\n          </div>\r\n          <span className=\"dates\">{dates.end.toLocaleString('default', {day:\"numeric\", month: 'long'})}</span>\r\n        </div>\r\n      </div>\r\n    </Flipped>\r\n  )\r\n}\r\n\r\n\r\nexport default ProgressBar;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Modal = ({mode, form, handleChange, open, onClose, onSave, children}) => {\r\n\tif (!open) return null\r\n\treturn ReactDom.createPortal(\r\n\t\t<>\r\n\t\t\t<div className=\"modal-overlay\">\r\n\t\t\t\t<div className=\"modal\">\r\n\t\t\t\t\t<h2>{mode === false ? \"New Battle Pass tracking\" : \"Edit Battle Pass Tracking\"}</h2>\r\n\r\n\t\t\t\t\t<div className=\"form-table\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Tracker name</label>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"name\" value={form.name} onChange={handleChange}></input>\r\n\r\n\t\t\t\t\t\t<label htmlFor=\"start\">Start date</label>\r\n\t\t\t\t\t\t<input type=\"date\" name=\"start\" value={form.start} onChange={handleChange}/>\r\n\r\n\t\t\t\t\t\t<label htmlFor=\"end\">End date</label>\r\n\t\t\t\t\t\t<input type=\"date\" name=\"end\" value={form.end} onChange={handleChange}/>\r\n\r\n\t\t\t\t\t\t<label htmlFor=\"time\">Time</label>\r\n\t\t\t\t\t\t<input type=\"time\" name=\"time\" value={form.time} onChange={handleChange}/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<label htmlFor=\"goal\">Level goal</label>\r\n\t\t\t\t\t\t<input type=\"number\" name=\"goal\" value={form.goal} onChange={handleChange}/>\r\n\r\n\t\t\t\t\t\t<label htmlFor=\"increment\">Increment amount</label>\r\n\t\t\t\t\t\t<input type=\"number\" name=\"increment\" value={form.increment} onChange={handleChange}/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"modal-buttons-container\">\t\r\n\t\t\t\t\t\t<button onClick={onSave}>Save</button>\r\n\t\t\t\t\t\t<button onClick={onClose}>Cancel</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>,\r\n\t\tdocument.getElementById('portal')\r\n\t)\r\n}\r\n\r\nexport default Modal\r\n ","import React, {useState, useEffect, useRef} from 'react';\r\nimport ProgressBar from './components/ProgressBar';\r\nimport Modal from './components/Modal';\r\nimport { Flipper } from 'react-flip-toolkit'\r\n// import { arrayMove } from 'array-move'\r\n\r\nconst App = () => {\r\n  const [dataIndex, setIndex] = useState(1)\r\n  const [data,setData] = useState([]);\r\n  const firstLoad = useRef(true);\r\n\r\n  if (firstLoad.current) {\r\n    \r\n    const storage = JSON.parse(localStorage.getItem(\"BattlePassTracker\"))\r\n\r\n    if (storage !== null) {\r\n      setIndex(storage.index)\r\n      setData(storage.data)\r\n    }\r\n    \r\n    firstLoad.current = false;\r\n  }\r\n\r\n  const [form,setForm] = useState({\r\n    name: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    time: \"\",\r\n    goal: 0,\r\n    level: \"0\",\r\n    increment: \"1\"\r\n  });\r\n  const [isEditing,setIsEditing] = useState(false);\r\n  const [modal,setModal] = useState(false);\r\n  const [lastChange, setLastChange] = useState([0,0])\r\n\r\n  const handleForm = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setForm({ ...form, [name]: value })\r\n    if (isEditing === false) {\r\n      setForm((prevState) => ({\r\n        ...prevState, id: dataIndex\r\n      }))\r\n    }\r\n  }\r\n\r\n  const handleSave = () => {\r\n    if (isEditing === false) {\r\n      setData(data.concat(form))\r\n      const newIndex = dataIndex + 1\r\n      setIndex(newIndex)\r\n    } else {\r\n      const modifiedData = data\r\n      const key = form.id\r\n      const index = modifiedData.findIndex(i => i.id === key);\r\n\r\n      modifiedData[index] = form\r\n\r\n      setData(modifiedData)\r\n      setIsEditing(false)\r\n      setLastChange([key,\"edit\"])\r\n    }\r\n    setForm({\r\n      name: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n      time: \"\",\r\n      goal: 0,\r\n      level: \"0\",\r\n      increment: 1\r\n    })\r\n    setModal(false)\r\n  }\r\n\r\n  const startEdit = key => {\r\n    const index = data.findIndex(i => i.id === key);\r\n    const editing = data[index]\r\n    setIsEditing(true)\r\n\r\n    setForm({\r\n      id: editing.id,\r\n      name: editing.name,\r\n      start: editing.start,\r\n      end: editing.end,\r\n      time: editing.time,\r\n      goal: editing.goal,\r\n      level: editing.level,\r\n      increment: editing.increment\r\n    })\r\n\r\n    setModal(true)\r\n  }\r\n\r\n  const handleLevel = (key, value) => {\r\n    const modifiedData = data\r\n    const index = modifiedData.findIndex(i => i.id === key);\r\n\r\n    modifiedData[index].level = value\r\n\r\n    setData(modifiedData)\r\n    setLastChange([index,modifiedData])\r\n  }\r\n\r\n  const deleteEntry = (key) => {\r\n    const modifiedData = data\r\n    const index = modifiedData.findIndex(i => i.id === key)\r\n\r\n    modifiedData.splice(index, 1)\r\n\r\n    setData(modifiedData)\r\n    setLastChange([index,\"deletion\"])\r\n  }\r\n\r\n  const moveEntry = (key, direction) => {\r\n    const arrayMove = require('array-move')\r\n    const modifiedData = data\r\n    const index = modifiedData.findIndex(i => i.id === key)\r\n    let newIndex = index \r\n\r\n    direction === \"up\" ? newIndex-- : newIndex++\r\n    \r\n    const movedData = arrayMove(modifiedData, index, newIndex)\r\n    setData(movedData)\r\n    setLastChange([index,\"moved\"])\r\n  }\r\n\r\n  const listProgresses = data.map((item, index = 0) => {\r\n    let position = \"\"\r\n\r\n    if (data.length === 1 ) {\r\n      position = \"alone\"\r\n    } else if (index === 0) {\r\n      position = \"first\"\r\n    } else if (index === data.length-1) {\r\n      position = \"last\"\r\n    }\r\n\r\n    return(\r\n      <ProgressBar  key={item.id} \r\n                    data={item} \r\n                    handleChange={handleLevel} \r\n                    editButton={startEdit} \r\n                    deleteButton={deleteEntry}\r\n                    moveButton={moveEntry}\r\n                    position={position}/>\r\n    )\r\n  })\r\n\r\n  const closeModal = () => {\r\n    setModal(false)\r\n    setIsEditing(false)\r\n    setForm({\r\n      name: \"\",\r\n      start: \"\",\r\n      end: \"\",\r\n      time: \"\",\r\n      goal: 0,\r\n      level: \"0\",\r\n      increment: 1\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storage = {\r\n      data: data,\r\n      index: dataIndex\r\n    }\r\n    localStorage.setItem(\"BattlePassTracker\", JSON.stringify(storage))\r\n  }, [data,dataIndex,lastChange])\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        <h1>Timed Progress tracker</h1>\r\n        <Flipper flipKey={lastChange} spring=\"stiff\">\r\n          {listProgresses}\r\n        </Flipper>\r\n        <div className=\"add-container\">\r\n         <button onClick={() => setModal(true)}>Add battlepass</button>\r\n        </div>\r\n        <Modal mode={isEditing} form={form} handleChange={handleForm} open={modal} onClose={closeModal} onSave={handleSave}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/style.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}